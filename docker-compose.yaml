services:
  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    networks:
      - vpb25_lakehouse
    volumes:
      - vpb25_minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket initialization
  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    networks:
      - vpb25_lakehouse
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/staging;
      mc mb myminio/silver;
      mc mb myminio/lakehouse;
      mc policy set public myminio/staging;
      mc policy set public myminio/silver;
      mc policy set public myminio/lakehouse;
      echo 'MinIO buckets created successfully';
      "

  # Apache Iceberg REST Catalog
  iceberg-rest:
    image: tabulario/iceberg-rest:latest
    container_name: iceberg-rest
    environment:
      # Catalog configuration
      CATALOG_WAREHOUSE: s3://lakehouse/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      
      # S3/MinIO configuration - Use container network
      CATALOG_S3_ENDPOINT: http://minio:9000
      CATALOG_S3_ACCESS_KEY_ID: minioadmin
      CATALOG_S3_SECRET_ACCESS_KEY: minioadmin
      CATALOG_S3_REGION: us-east-1
      CATALOG_S3_PATH__STYLE__ACCESS: true
      
      # AWS SDK configuration
      AWS_REGION: us-east-1
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    ports:
      - "8181:8181"
    networks:
      - vpb25_lakehouse
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped
    # Add healthcheck for Iceberg REST
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/v1/config"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  vpb25_minio_data:

networks:
  vpb25_lakehouse:
    driver: bridge

  # # FastAPI Application
  # app:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile
  #   container_name: vpb-lakehouse-app
  #   environment:
  #     - MINIO_ENDPOINT=minio:9000
  #     - MINIO_ACCESS_KEY=minioadmin
  #     - MINIO_SECRET_KEY=minioadmin
  #     - ICEBERG_CATALOG_URI=http://iceberg-rest:8181
  #     - PYTHONPATH=/app
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./app:/app
  #   depends_on:
  #     - minio-init
  #     - iceberg-rest
  #   command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload